#!/usr/bin/env bash
#
# SPDX-License-Identifier: AGPL-3.0

_bin="$( \
  dirname \
    "$( \
      command \
        -v \
	  "env")")"
_lib="${_bin}/../lib"
_share="${_bin}/../share"
source \
  "${_lib}/libcrash-bash/crash-bash"

# Check all required programs
# are available
_requirements() {
  _check_cmd \
    "ffmpeg"
  _check_cmd \
    "cacawrite" \
    "caca-utils"
}

# shellcheck disable=SC2034
_global_variables() {
  make_date=""
  out_txt=""
  in_pic=""
  out_stdout=""
  color=""
  quiet=""
}

_ffmpeg_options_load() {
  local \
    ffmpeg_options
  ffmpeg_options="${HOME}/.config/media-tools/ffmpeg_options"
  [ -e "${ffmpeg_options}" ] && \
    source \
      "${ffmpeg_options}" || \
  true
}

# Converts picture to ascii format compotible with VTE terminals
# $1: input picture
# $2: out text
_pic2ascii() {
  local \
    _in="${1}" \
    _out="${2}" \
    _opts=() \
    _pic_tmp
  _pic_tmp="$( \
    mktemp \
      --suffix=".jpg")"
  if [[ "${quiet}" == "y" ]]; then
    _ffmpeg_opts+=(
      -y
    )
  fi
  _opts+=(
    "${_ffmpeg_opts[@]}"
    #  -loop 1
  )
  _opts+=(
    -i "${_in}"
  )
  ffmpeg \
    "${_opts[@]}" \
    "${_pic_tmp}"
  cacawrite \
    "${_pic_tmp}" \
    "${_out}"
  rm \
    -rf \
      "${_pic_tmp}"
}

# Set defaults and, if present, overrides
# from arch-grub command line option parameters
_set_overrides() {
  _set_override \
    "make" \
    "date" \
    "$(_get_date_human)"
  if [[ -v override_color ]]; then
    color="${override_color}"
  elif [[ -z "${color}" ]]; then
    color="n"
  fi
  if [[ -v override_quiet ]]; then
    quiet="${override_quiet}"
  elif [[ -z "${quiet}" ]]; then
    quiet="y"
  fi
}

# Shows configuration options.
_show_config() {
  _msg_info "${app_name} configuration"
  _msg_info "                Make date:   $(_get "make" "date")"
  _msg_info "               In picture:   $(_get "in" "pic")"
  _msg_info "            Out text file:   $(_get "out" "txt")"
}

# Show help usage, with an exit status.
# $1: exit status number.
_usage() {
  local \
    _usage_text
  IFS='' \
    read \
      -r \
      -d '' \
      _usage_text << \
        ENDUSAGETEXT || true

Converts picture to ascii format compatibre with common VTE
using cacawrite from caca-utils.

Usage:
  $(_get "app" "name")
    [options]
    <in_pic>
    <out_txt>
  options:
     -h                   This message.
     -v                   Enable verbose output
ENDUSAGETEXT
  _printf \
    '%s\n' \
    "${_usage_text}"
  exit \
    "${1}"
}

_globals
_global_variables
_requirements
# shellcheck disable=SC2004
# shellcheck disable=SC2034
while \
  getopts \
    'cvh?' \
    arg; do
  case \
    "${arg}" in
    c) override_color="y" ;;
    v) override_quiet="n" ;;
    h|?) _set_overrides && \
	 _usage \
           0 ;;
    *)
    _msg_error \
      "Invalid argument '${arg}'" \
      0 && \
    _set_overrides && \
    _usage \
      1
    ;;
  esac
done
shift \
  $(( \
    OPTIND - 1 \
  ))

(( $# < 3 )) && \
  _set_overrides && \
  _usage \
    1
_set \
  "in" \
  "pic" \
  "${1}"
_set \
  "out" \
  "txt" \
  "${2}"
in_video="${3}"
_set_overrides
_config_user_init \
  "media-tools"
_ffmpeg_options_load
_show_config
app_opts=(
  "$(_get \
       "in" \
       "pic")"
  "$(_get \
       "out" \
       "txt")"
)
_pic2ascii \
  "${app_opts[@]}"
