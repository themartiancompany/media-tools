#!/usr/bin/env bash
#
# SPDX-License-Identifier: AGPL-3.0

_bin="$( \
  dirname \
    "$( \
      command \
        -v \
	  "env")")"
_lib="${_bin}/../lib"
_share="${_bin}/../share"
source \
  "${_lib}/libcrash-bash/crash-bash"

# shellcheck disable=SC2034
_global_variables() {
  in_file=""
  out_file=""
  encode_mode=""
  color=""
  quiet=""
}

# Check all required programs
# are available
_requirements() {
  _check_cmd \
    "addfade"
  _check_cmd \
    "addsilence"
  _check_cmd \
    "audioverlap"
  _check_cmd \
    "bc"
}

_mkaudioloop() {
  local \
    _in="${1}" \
    _out="${2}" \
    _cut_in="${3}" \
    _fade_in="${4}" \
    _fade_duration="${5}" \
    _loops="${6}" \
    _opts=() \
    _shifted=() \
    _faded
  [[ "${_loops}" == "" ]] && \
    _loops=0
  _faded="$( \
    mktemp)"
  _base="$( \
    mktemp)"
  addfade \
    "${_in}" \
    "${_fade_in}" \
    "${_fade_duration}" \
    "${_faded}"
  for _loop \
    in $( \
      seq \
        0 \
        "${_loops}"); do
    _shift="$( \
      mktemp)"
    addsilence \
      "${_faded}" \
      "$( \
        echo \
	  "${_duration} * ${_loop} +" \
	  "${_cut_in}" | \
	  bc)" \
      "${_shift}"
    _shifted+=(
      "${_shift}"
    )
  done
  audioverlap \
    "${_out}" \
    "${_in}" \
    "${_shifted[@]}"
}

_set_overrides() {
  if [[ -v override_color ]]; then
    color="${override_color}"
  elif [[ -z "${color}" ]]; then
    color="n"
  fi
  if [[ -v override_quiet ]]; then
    quiet="${override_quiet}"
  elif [[ -z "${quiet}" ]]; then
    quiet="y"
  fi
}

# Show help usage, with an exit status.
# $1: exit status number.
_usage() {
  local \
    _usage_text
  IFS='' \
    read \
      -r \
      -d '' \
      _usage_text << \
        ENDUSAGETEXT || true
Make a loop out of an audio file

Usage:
  $(_get "app" "name")
    [options]
    <in_file>
    <out_file>
    <cut_in>
    <fade_in>
    <fade_duration>
    <loops_amount>
  options:
     -m                   Video encode mode ('quolity', 'size').
                          Default: $(_get "encode" "mode")
     -h                   This message.
     -v                   Enable verbose output
ENDUSAGETEXT
  _printf \
    '%s\n' \
    "${_usage_text}"
  exit \
    "${1}"
}

_globals
_global_variables
_requirements
# shellcheck disable=SC2004
# shellcheck disable=SC2034
while \
  getopts \
    'cvh?' \
    arg; do
  case \
    "${arg}" in
    c) override_color="y" ;;
    v) override_quiet="n" ;;
    h|?) _set_overrides && \
         _usage \
           0 ;;
    *)
    _msg_error \
      "Invalid argument '${arg}'" \
      0
    _usage \
      1
    ;;
  esac
done
shift \
  $(( \
    OPTIND - 1 \
  ))
(( ${#} < 6 )) && \
  _usage \
    1
_set \
  "in" \
  "file" \
  "${1}"
_set \
  "out" \
  "file" \
  "${2}"
_set \
  "cut" \
  "in" \
  "${3}"
_set \
  "fade" \
  "in" \
  "${4}"
_set \
  "fade" \
  "duration" \
  "${5}"
_set \
  "loops" \
  "amount" \
  "${6}"
_set_overrides
_mkaudioloop \
  _get \
    "in" \
    "file" \
  _get \
    "out" \
    "file" \
  _get \
    "cut" \
    "in" \
  _get \
    "fade" \
    "in" \
  _get \
    "fade" \
    "duration" \
  _get \
    "loops" \
    "amount"
